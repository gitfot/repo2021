server:
  port: 8080
spring:
  web:
    #静态资源处理
    resources:
      #启动默认静态资源处理，默认启用
      add-mappings: true
      cache:
        cachecontrol:
          #缓存相应时间，单位秒
          max-age: 3600
      chain:
        #资源链启动缓存，默认启动
        cache: true
        #启用资源链，默认禁用
        enabled: true
        #启用压缩资源(gzip,brotli)解析，默认禁用
        compressed: true

  thymeleaf:
    # 关闭缓存
    cache: false

  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://p2wan.fun:3306/quartz?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: 123456
    hikari:
      #连接池名
      pool-name: DateHikariCP
      # 最小空闲连接出
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000(10分钟)
      idle-timeout: 600000
      #最大连接数，默认10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0表示永久存活，默认1800000(30分钟)
      max-lifetime: 1800000
      # 连接超时时间，默认30000(30秒)
      connection-timeout: 30000
      # 测试连接是否可用的查询语句
      connection-test-query: SELECT 1
  redis:
    host: 192.168.10.100
    port: 6379
    database: 0
    timeout: 10000ms
    password: redis123
    lettuce:
      pool:
        #最大连接数，默认8
        max-active: 8
        #最大连接阻塞等待时间，默认-1
        max-wait: 10000ms
        #最大空闲连接，默认8
        max-idle: 200
        #最小空闲连接，默认0
        min-idle: 5
  rabbitmq:
    # 服务器
    host: 192.168.10.101
    #用户名
    username: guest
    #密码
    password: guest
    # 虚拟主机
    virtual-host: /
    #端口
    port: 5672
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        #消费者最大数量
        max-concurrency: 10
        #限制消费者每次只处理一条消息，处理完再继续下一条消息
        prefetch: 1
        #启动时是否默认启动容器，默认true
        auto-startup: true
        #被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试最大次数，默认3次
        max-attempts: 3
        #重试最大间隔时间，默认10000ms
        max-interval: 10000ms
        #重试的间隔乘数。比如配2.0，第一次就等10s，第二次就等20s，第三次就等40s
        multiplier: 1

# MyBatis SQL打印(方法接口所在的包，不是Mapper.xml所在的包)
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#mybatis:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    com.fun.test: debug

